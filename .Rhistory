library(predcomp)
##### bencalibr
# continuous outcome
dat1=simcont(200)$dat
head(dat1)
lm1=lm(y.observed~(x1+x2+x3)*t, data=dat1)
dat.t0=dat1; dat.t0$t=0 # a dataset
dat.t1=dat1; dat.t1$t=1
dat1$predict.treat.1=predict(lm1, newdata = dat.t1) # predictions in treatment
dat1$predict.treat.0=predict(lm1, newdata = dat.t0) # predicions in control
bencalibr(data=dat1, Ngroups=10, y.observed, predicted.treat.1=predict.treat.1,
predicted.treat.0=predict.treat.0, type="continuous", treat=t,
smoothing.function = "lm")
library(devtools)
install_github("esm-ispm-unibe-ch-REPRODUCIBLE/calibration_benefit")
library(predcomp)
##### bencalibr
# continuous outcome
dat1=simcont(200)$dat
# binary outcome
dat2=simbinary(300)$dat
head(dat2)
glm1=glm(y.observed~(x1+x2+x3)*t, data=dat2, family = binomial(link = "logit"))
dat2.t0=dat2; dat2.t0$t=0 # a dataset
dat2.t1=dat2; dat2.t1$t=1
dat2$predict.treat.1=predict(glm1, newdata = dat2.t1) # predictions in treatment
dat2$predict.treat.0=predict(glm1, newdata = dat2.t0) # predicions in control
bencalibr(data=dat2, Ngroups=6, y.observed, predicted.treat.1=predict.treat.1,
predicted.treat.0=predict.treat.0, type="binary", treat=t,
smoothing.function = "lm", measure="logor")
bencalibr(data=dat2, Ngroups=6, y.observed, predicted.treat.1=predict.treat.1,
predicted.treat.0=predict.treat.0, type="binary", treat=t,
smoothing.function = "lm", measure="RD")
library("devtools")
library("roxygen2")
setwd("C:/Users/Orestis/Google Drive/PROJECT/calibration for benefit for prediction models/R code calibration for benefit/predcomp")
document()
load_all(".")
simbinary(20)
?simcont
?logit
?bencalibr
# continuous outcome
dat1=simcont(200)$dat
head(dat1)
lm1=lm(y.observed~(x1+x2+x3)*t, data=dat1)
dat.t0=dat1; dat.t0$t=0
dat.t1=dat1; dat.t1$t=1
dat1$predict.treat.1=predict(lm1, newdata = dat.t1) # predictions in treatment
dat1$predict.treat.0=predict(lm1, newdata = dat.t0) # predicions in control
bencalibr(data=dat1, Ngroups=10, y.observed, predicted.treat.1=predict.treat.1,
predicted.treat.0=predict.treat.0, type="continuous", treat=t,
smoothing.function = "lm")
##### predcompare
dat1=simcont(500)$dat
lm1=lm(y.observed~(x1+x2+x3)*t, data=dat1)
dat.t0=dat1; dat.t0$t=0 # a dataset
dat.t1=dat1; dat.t1$t=1
dat1$predict.treat.1=predict(lm1, newdata = dat.t1) # predictions in treatment
dat1$predict.treat.0=predict(lm1, newdata = dat.t0) # predicions in control
predcompare(repeats=20, Ngroups=c(5:10), X=dat1[,c("x1", "x2","x3")],
Y=dat1$y.observed,
predicted.treat.1 = dat1$predict.treat.1,
predicted.treat.0 = dat1$predict.treat.0,
treat=dat1$t, type="continuous")
# continuous outcome
dat1=simcont(500)$dat
lm1=lm(y.observed~(x1+x2+x3)*t, data=dat1)
dat.t0=dat1; dat.t0$t=0 # a dataset
dat.t1=dat1; dat.t1$t=1
dat1$predict.treat.1=predict(lm1, newdata = dat.t1) # predictions in treatment
dat1$predict.treat.0=predict(lm1, newdata = dat.t0) # predicions in control
predcompare(repeats=20, Ngroups=c(5:10), X=dat1[,c("x1", "x2","x3")],
Y=dat1$y.observed,
predicted.treat.1 = dat1$predict.treat.1,
predicted.treat.0 = dat1$predict.treat.0,
treat=dat1$t, type="continuous")
# binary outcome
dat2=simbinary(300)$dat
head(dat2)
glm1=glm(y.observed~(x1+x2+x3)*t, data=dat2, family = binomial(link = "logit"))
dat2.t0=dat2; dat2.t0$t=0
dat2.t1=dat2; dat2.t1$t=1
dat2$predict.treat.1=predict(glm1, newdata = dat2.t1) # predictions in treatment
dat2$predict.treat.0=predict(glm1, newdata = dat2.t0) # predicions in control
dat2=simbinary(800)$dat
head(dat2)
glm1=glm(y.observed~(x1+x2+x3)*t, data=dat2, family = binomial(link = "logit"))
dat2.t0=dat2; dat2.t0$t=0
dat2.t1=dat2; dat2.t1$t=1
dat2$predict.treat.1=predict(glm1, newdata = dat2.t1) # predictions in treatment
dat2$predict.treat.0=predict(glm1, newdata = dat2.t0) # predicions in control
predcompare(repeats=20, Ngroups=c(5:10), X=dat1[,c("x1", "x2","x3")],
Y=dat1$y.observed,
predicted.treat.1 = dat1$predict.treat.1,
predicted.treat.0 = dat1$predict.treat.0,
treat=dat1$t, type="binary", measure="RD")
predcompare(repeats=20, Ngroups=c(5:10), X=dat2[,c("x1", "x2","x3")],
Y=dat2$y.observed,
predicted.treat.1 = dat2$predict.treat.1,
predicted.treat.0 = dat2$predict.treat.0,
treat=dat2$t, type="binary", measure="RD")
predcompare(repeats=20, Ngroups=c(5:10), X=dat2[,c("x1", "x2","x3")],
Y=dat2$y.observed,
predicted.treat.1 = dat2$predict.treat.1,
predicted.treat.0 = dat2$predict.treat.0,
treat=dat2$t, type="binary", measure="logor")
setwd("C:/Users/Orestis/Google Drive/PROJECT/calibration for benefit for prediction models/R code calibration for benefit/predcomp")
document()
load_all(".")
simbinary(20)
?simcont
?logit
?bencalibr
?predcomare
?predcompare
library(devtools) # Make sure that the devtools library is loaded
install_github("esm-ispm-unibe-ch-REPRODUCIBLE/calibration_benefit");
library(predcomp)
?simcont
setwd("C:/Users/Orestis/Google Drive/PROJECT/calibration for benefit for prediction models/calibration_benefit")
setwd("C:/Users/efthimiou/Google Drive/PROJECT/calibration for benefit for prediction models/calibration_benefit")
load_all(".")
library("devtools")
library("roxygen2")
install.packages("roxygen2")
setwd("C:/Users/efthimiou/Google Drive/PROJECT/calibration for benefit for prediction models/calibration_benefit")
load_all(".")
?simbinary
View(simbinary)
