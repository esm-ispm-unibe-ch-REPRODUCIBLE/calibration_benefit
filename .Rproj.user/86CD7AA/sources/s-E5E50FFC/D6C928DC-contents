#' Simulate binary
#'
#' Calculates measures
#' @param repeats A dataframe
#' @return A table
#' @examples 
#' temp1 <- F_to_C(50);
#' temp2 <- F_to_C( c(50, 63, 23) );
#' @export
simulate.data.binary=function(Npat=100){
  ### simulate covariates
  library(MASS)
expit=function(x){ exp(x)/(1 + exp(x))}
logit=function(x){l=log(x/(1-x)); return(l)}
  # observed true predictors
  x1x2<-mvrnorm(n = Npat, c(0,0), Sigma=matrix(c(1,0.2,0.2,1),2,2))
  simdat <- data.frame(x1=x1x2[,1]) # continuous covariate 1
  simdat$x2<-x1x2[,2] # continuous covariate 2
  x3.lin <-rbinom(Npat, 1, prob = 0.2)
  simdat$x3<-rbinom(Npat, 1, prob = expit(x3.lin) )
  
  #unobserved true predictors
  simdat$x4<-rnorm(Npat, 0, 1 )
  
  ## observed nuisance parameters
  simdat$x5<-rnorm(Npat, 0, 1 )
  simdat$x6<-rnorm(Npat, 0, 1 )

  
  ### simulate treatment assignment
  pt <- 0.5 ## randomized
  simdat$t <- rbinom(Npat, 1, prob = pt)
  ### outcome at control treatment
  simdat$logit.control<- with(simdat, -2+0.2*x1+1*x2+0.6*x3+0.3*x4+
                            0.1*x1^2+0.2*x1*x4+0.2*x4*x4+
                            rnorm(Npat, 0, 0.1))
  ### treatment benefit
  simdat$benefit<-with(simdat, -0.5-0.2*x1-0.1*x2+0.2*x3+0.2*x4+0.5*x1*x4+
                         0.1*x4*x2+0.1*x2*x3+0.1*x3*x4+
                         rnorm(Npat, 0, 0.05))
  simdat$logit.active=with(simdat,logit.control+benefit)
  simdat$logit.py=with(simdat,logit.control+t*benefit)
  simdat$py<-expit(simdat$logit.py)
  simdat$y.observed=rbinom(Npat, 1, prob=simdat$py)
  return(list(dat=simdat))
}